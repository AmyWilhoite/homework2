/* I may have a little extra code in here in my attempts to get my site to work */

* {
    box-sizing: border-box;
  }
/* This allows me to style elements using the css variable function (which i think is so cool!!) */
:root {
    --black: black;
    --light: gainsboro;
    --pink: rgb(206, 37, 155);
    --padding:padding: 2%;
}

/* This is the original flex container setup */
body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  display:flex;
  flex-direction: column;
  min-height: 100vh;
  padding: var(--padding);
}
/* this is the header style */
/* in progress still - trying to use flex to space my profile/paragraph/caption along side eachother */

header {
  display:right;
  flex-direction: row;
  background: var(--black);
  color: var(--light);
}

/* styles container for main section */
#container2 {
  display:flex;
  flex:1;
  
}
/* added this to create padding for text that was flush */
.textpad {
  padding-left: 2%;
  padding-right: 2%;
}

.alignleft {
  text-align:left;
}
.alignright {
  text-align:right;
}

/* Navigation style for header flexible layout*/
nav {
  display: flex;
  justify-content: flex-end;
  float: right;
  background-color:var(--pink);
  }

nav a {
  padding:20px;
  text-decoration: none;
  text-align:center; 
  color:var(--light);
}

/* this styles my profile image. */
.profimage {
  height: 300px;
  width: auto;
}

/* side bar section was a struggle for me */
aside {
  overflow:hidden;
  float:left;
  background: var(--pink);
  width: 250px;
  bottom: 0;
  color: var(--light);
}

/* in progress - making text style vertically vs horizontally */
.asidemenu {
  flex-direction: column;
  justify-content: flex-end;
  text-align:justify ;
  text-decoration:none;
  color:var(--light)
  
  }

/* this is the grid section styled to be nested inside the previous flex container */
section {
    position:relative;
    float:right;
    flex:2;
    flex-direction: column;
    padding: var(--padding);
  }

/* This flex grid to create the desired layout for porfolio of work */
.grid {
  display: grid;
  grid-template-columns: auto auto;
  grid-column: 1 / 2;
  grid-gap: 10px;
  background-color: var(--light);
  padding: 10px;
  text-decoration: none;
}

/* grid inside formatting */
.grid > div {
    background-color:white;
    text-align: right;
    text-decoration: none;
    padding: var(--padding);
    font-size: 2rem;
  }

.floatleft {
  float: left;
}

.floatright {
  float:none;
}

/* grid formatting may be overkill - I had trouble getting items to fit */
.photo1 {
  grid-column-start:1;
  grid-column-end:3;
  grid-area: 1 / 1 / span 1 / span 2;
  position:relative;
  width: 100%;
  min-height: 200px;
  max-height: 300px;
  border: 1px solid --light;
  padding:var(--padding);
  display:inline-block;
}

.photo1 > img {
  object-fit: cover;
  width: 100%;
  max-height: 100%;
}

.photo2 > img {
  object-fit: cover;
  width: 100%;
  max-height: 100%;
}

/* image becomes responsive with mouse with hover */
/* I would like 1 class to work for muliple elements for hover tried to apply to grid */

.photo1:hover {
  background-color:var(--light);
}

.photo2:hover {
  background-color:var(--light);
}

.photo2 {
  flex-direction: row;
  width: 100%;
  min-height: 200px;
  border: 1px solid --light;
  padding:var(--padding);
  display:block;
}

  /* footer formatting id like to put in the grid */
footer {
  text-align:left;
  display: wrap;
  background: var(--black);
  color: var(--light);
  text-decoration: none;
  }

 /* This media query section allows my styles to adjust by screen size */

  @media screen and (max-width: 768px) {
 /* allows stacking, order for the main section and navigation */   
    nav  {
      order: 1;
      flex-direction: column;
    }

    main {
      order: 2;
    }
    
    header {
      background:var(--black)
    }

    aside {
      order: 5;
      background:var(--black)
    }

    section {
      order: 4;
    }

    div {
      flex-direction: column;
    }


    footer {
      order:6;
      background-color: var(--pink);
    }
  }